{"ast":null,"code":"import TLError from \"../core/TLError\";\nconst css_named_colors = {\n  \"aliceblue\": \"#f0f8ff\",\n  \"antiquewhite\": \"#faebd7\",\n  \"aqua\": \"#00ffff\",\n  \"aquamarine\": \"#7fffd4\",\n  \"azure\": \"#f0ffff\",\n  \"beige\": \"#f5f5dc\",\n  \"bisque\": \"#ffe4c4\",\n  \"black\": \"#000000\",\n  \"blanchedalmond\": \"#ffebcd\",\n  \"blue\": \"#0000ff\",\n  \"blueviolet\": \"#8a2be2\",\n  \"brown\": \"#a52a2a\",\n  \"burlywood\": \"#deb887\",\n  \"cadetblue\": \"#5f9ea0\",\n  \"chartreuse\": \"#7fff00\",\n  \"chocolate\": \"#d2691e\",\n  \"coral\": \"#ff7f50\",\n  \"cornflowerblue\": \"#6495ed\",\n  \"cornsilk\": \"#fff8dc\",\n  \"crimson\": \"#dc143c\",\n  \"cyan\": \"#00ffff\",\n  \"darkblue\": \"#00008b\",\n  \"darkcyan\": \"#008b8b\",\n  \"darkgoldenrod\": \"#b8860b\",\n  \"darkgray\": \"#a9a9a9\",\n  \"darkgreen\": \"#006400\",\n  \"darkkhaki\": \"#bdb76b\",\n  \"darkmagenta\": \"#8b008b\",\n  \"darkolivegreen\": \"#556b2f\",\n  \"darkorange\": \"#ff8c00\",\n  \"darkorchid\": \"#9932cc\",\n  \"darkred\": \"#8b0000\",\n  \"darksalmon\": \"#e9967a\",\n  \"darkseagreen\": \"#8fbc8f\",\n  \"darkslateblue\": \"#483d8b\",\n  \"darkslategray\": \"#2f4f4f\",\n  \"darkturquoise\": \"#00ced1\",\n  \"darkviolet\": \"#9400d3\",\n  \"deeppink\": \"#ff1493\",\n  \"deepskyblue\": \"#00bfff\",\n  \"dimgray\": \"#696969\",\n  \"dodgerblue\": \"#1e90ff\",\n  \"firebrick\": \"#b22222\",\n  \"floralwhite\": \"#fffaf0\",\n  \"forestgreen\": \"#228b22\",\n  \"fuchsia\": \"#ff00ff\",\n  \"gainsboro\": \"#dcdcdc\",\n  \"ghostwhite\": \"#f8f8ff\",\n  \"gold\": \"#ffd700\",\n  \"goldenrod\": \"#daa520\",\n  \"gray\": \"#808080\",\n  \"green\": \"#008000\",\n  \"greenyellow\": \"#adff2f\",\n  \"honeydew\": \"#f0fff0\",\n  \"hotpink\": \"#ff69b4\",\n  \"indianred\": \"#cd5c5c\",\n  \"indigo\": \"#4b0082\",\n  \"ivory\": \"#fffff0\",\n  \"khaki\": \"#f0e68c\",\n  \"lavender\": \"#e6e6fa\",\n  \"lavenderblush\": \"#fff0f5\",\n  \"lawngreen\": \"#7cfc00\",\n  \"lemonchiffon\": \"#fffacd\",\n  \"lightblue\": \"#add8e6\",\n  \"lightcoral\": \"#f08080\",\n  \"lightcyan\": \"#e0ffff\",\n  \"lightgoldenrodyellow\": \"#fafad2\",\n  \"lightgray\": \"#d3d3d3\",\n  \"lightgreen\": \"#90ee90\",\n  \"lightpink\": \"#ffb6c1\",\n  \"lightsalmon\": \"#ffa07a\",\n  \"lightseagreen\": \"#20b2aa\",\n  \"lightskyblue\": \"#87cefa\",\n  \"lightslategray\": \"#778899\",\n  \"lightsteelblue\": \"#b0c4de\",\n  \"lightyellow\": \"#ffffe0\",\n  \"lime\": \"#00ff00\",\n  \"limegreen\": \"#32cd32\",\n  \"linen\": \"#faf0e6\",\n  \"magenta\": \"#ff00ff\",\n  \"maroon\": \"#800000\",\n  \"mediumaquamarine\": \"#66cdaa\",\n  \"mediumblue\": \"#0000cd\",\n  \"mediumorchid\": \"#ba55d3\",\n  \"mediumpurple\": \"#9370db\",\n  \"mediumseagreen\": \"#3cb371\",\n  \"mediumslateblue\": \"#7b68ee\",\n  \"mediumspringgreen\": \"#00fa9a\",\n  \"mediumturquoise\": \"#48d1cc\",\n  \"mediumvioletred\": \"#c71585\",\n  \"midnightblue\": \"#191970\",\n  \"mintcream\": \"#f5fffa\",\n  \"mistyrose\": \"#ffe4e1\",\n  \"moccasin\": \"#ffe4b5\",\n  \"navajowhite\": \"#ffdead\",\n  \"navy\": \"#000080\",\n  \"oldlace\": \"#fdf5e6\",\n  \"olive\": \"#808000\",\n  \"olivedrab\": \"#6b8e23\",\n  \"orange\": \"#ffa500\",\n  \"orangered\": \"#ff4500\",\n  \"orchid\": \"#da70d6\",\n  \"palegoldenrod\": \"#eee8aa\",\n  \"palegreen\": \"#98fb98\",\n  \"paleturquoise\": \"#afeeee\",\n  \"palevioletred\": \"#db7093\",\n  \"papayawhip\": \"#ffefd5\",\n  \"peachpuff\": \"#ffdab9\",\n  \"peru\": \"#cd853f\",\n  \"pink\": \"#ffc0cb\",\n  \"plum\": \"#dda0dd\",\n  \"powderblue\": \"#b0e0e6\",\n  \"purple\": \"#800080\",\n  \"rebeccapurple\": \"#663399\",\n  \"red\": \"#ff0000\",\n  \"rosybrown\": \"#bc8f8f\",\n  \"royalblue\": \"#4169e1\",\n  \"saddlebrown\": \"#8b4513\",\n  \"salmon\": \"#fa8072\",\n  \"sandybrown\": \"#f4a460\",\n  \"seagreen\": \"#2e8b57\",\n  \"seashell\": \"#fff5ee\",\n  \"sienna\": \"#a0522d\",\n  \"silver\": \"#c0c0c0\",\n  \"skyblue\": \"#87ceeb\",\n  \"slateblue\": \"#6a5acd\",\n  \"slategray\": \"#708090\",\n  \"snow\": \"#fffafa\",\n  \"springgreen\": \"#00ff7f\",\n  \"steelblue\": \"#4682b4\",\n  \"tan\": \"#d2b48c\",\n  \"teal\": \"#008080\",\n  \"thistle\": \"#d8bfd8\",\n  \"tomato\": \"#ff6347\",\n  \"turquoise\": \"#40e0d0\",\n  \"violet\": \"#ee82ee\",\n  \"wheat\": \"#f5deb3\",\n  \"white\": \"#ffffff\",\n  \"whitesmoke\": \"#f5f5f5\",\n  \"yellow\": \"#ffff00\",\n  \"yellowgreen\": \"#9acd32\"\n};\n\nfunction intToHexString(i) {\n  return pad(parseInt(i, 10).toString(16));\n}\n\nexport function hexToRgb(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  if (css_named_colors[hex.toLowerCase()]) {\n    hex = css_named_colors[hex.toLowerCase()];\n  }\n\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n} // given an object with r, g, and b keys, or a string of the form 'rgb(mm,nn,ll)', return a CSS hex string including the leading '#' character\n\nexport function rgbToHex(rgb) {\n  var r, g, b;\n\n  if (typeof rgb == 'object') {\n    r = rgb.r;\n    g = rgb.g;\n    b = rgb.b;\n  } else if (typeof rgb.match == 'function') {\n    var parts = rgb.match(/^rgb\\((\\d+),(\\d+),(\\d+)\\)$/);\n\n    if (parts) {\n      r = parts[1];\n      g = parts[2];\n      b = parts[3];\n    }\n  }\n\n  if (isNaN(r) || isNaN(b) || isNaN(g)) {\n    throw new TLError(\"invalid_rgb_err\");\n  }\n\n  return \"#\" + intToHexString(r) + intToHexString(g) + intToHexString(b);\n}\nexport function mergeData(data_main, data_to_merge) {\n  var x;\n\n  for (x in data_to_merge) {\n    if (Object.prototype.hasOwnProperty.call(data_to_merge, x)) {\n      data_main[x] = data_to_merge[x];\n    }\n  }\n\n  return data_main;\n}\nexport function isTrue(s) {\n  if (s == null) return false;\n  return s == true || String(s).toLowerCase() == 'true' || Number(s) == 1;\n} // like mergeData but takes an arbitrarily long list of sources to merge.\n\nexport function extend(\n/*Object*/\ndest)\n/*-> Object*/\n{\n  // merge src properties into dest\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  for (var j = 0, len = sources.length, src; j < len; j++) {\n    src = sources[j] || {};\n    mergeData(dest, src);\n  }\n\n  return dest;\n}\nconst TRACE_HANDLERS = [];\n/**\n * Register a callback to be executed when trace is called in this runtime.\n * Callbacks will be called with whatever was passed to `trace` which is \n * expected to be a string.\n * @param {callable} cb \n */\n\nexport function addTraceHandler(cb) {\n  TRACE_HANDLERS.push(cb);\n}\n/**\n * Pass the given `msg` to each registered trace handler.\n * This is a crude adaptation of the original Timeline trace\n * function which assumed access to a global `debug` flag.\n * \n * @param {string} msg \n */\n\nexport function trace(msg) {\n  TRACE_HANDLERS.forEach(cb => {\n    try {\n      cb(msg);\n    } catch (e) {\n      if (console && console.log) {\n        console.log(\"Error handling trace\", e);\n      }\n    }\n  });\n}\nexport function pad(val, len) {\n  val = String(val);\n  len = len || 2;\n\n  while (val.length < len) val = \"0\" + val;\n\n  return val;\n}\nexport const stamp = function () {\n  var lastId = 0,\n      key = '_tl_id';\n  return function (\n  /*Object*/\n  obj) {\n    obj[key] = obj[key] || ++lastId;\n    return obj[key];\n  };\n}();\n/**\n * Remove any leading or trailing whitespace from the given string.\n * If `str` is undefined or does not have a `replace` function, return\n * an empty string.\n */\n\nexport function trim(str) {\n  if (str && typeof str.replace == 'function') {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  return \"\";\n}\nexport function maxDepth(ary) {\n  // given a sorted array of 2-tuples of numbers, count how many \"deep\" the items are.\n  // that is, what is the maximum number of tuples that occupy any one moment\n  // each tuple should also be sorted\n  var stack = [];\n  var max_depth = 0;\n\n  for (var i = 0; i < ary.length; i++) {\n    stack.push(ary[i]);\n\n    if (stack.length > 1) {\n      var top = stack[stack.length - 1];\n      var bottom_idx = -1;\n\n      for (var j = 0; j < stack.length - 1; j++) {\n        if (stack[j][1] < top[0]) {\n          bottom_idx = j;\n        }\n      }\n\n      ;\n\n      if (bottom_idx >= 0) {\n        stack = stack.slice(bottom_idx + 1);\n      }\n    }\n\n    if (stack.length > max_depth) {\n      max_depth = stack.length;\n    }\n  }\n\n  ;\n  return max_depth;\n}\n/**\n * Implement mixin behavior. Based on \n *     https://blog.bitsrc.io/understanding-mixins-in-javascript-de5d3e02b466\n * @param {class} cls \n * @param  {...class} src \n */\n\nexport function classMixin(cls, ...src) {\n  for (let _cl of src) {\n    for (var key of Object.getOwnPropertyNames(_cl.prototype)) {\n      cls.prototype[key] = _cl.prototype[key];\n    }\n  }\n}\nexport function ensureUniqueKey(obj, candidate) {\n  if (!candidate) {\n    candidate = unique_ID(6);\n  }\n\n  if (!(candidate in obj)) {\n    return candidate;\n  }\n\n  var root = candidate.match(/^(.+)(-\\d+)?$/)[1];\n  var similar_ids = []; // get an alternative\n\n  for (let key in obj) {\n    if (key.match(/^(.+?)(-\\d+)?$/)[1] == root) {\n      similar_ids.push(key);\n    }\n  }\n\n  candidate = root + \"-\" + (similar_ids.length + 1);\n\n  for (var counter = similar_ids.length; similar_ids.indexOf(candidate) != -1; counter++) {\n    candidate = root + '-' + counter;\n  }\n\n  return candidate;\n}\nexport function isEmptyObject(o) {\n  var properties = [];\n\n  if (Object.keys) {\n    properties = Object.keys(o);\n  } else {\n    // all this to support IE 8\n    for (var p in o) if (Object.prototype.hasOwnProperty.call(o, p)) properties.push(p);\n  }\n\n  for (var i = 0; i < properties.length; i++) {\n    var k = properties[i];\n    if (o[k] != null && typeof o[k] != \"string\") return false;\n    if (trim(o[k]).length != 0) return false;\n  }\n\n  return true;\n}\nexport function slugify(str) {\n  // borrowed from http://stackoverflow.com/a/5782563/102476\n  str = trim(str);\n  str = str.toLowerCase(); // remove accents, swap ñ for n, etc\n\n  var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n  var to = \"aaaaaeeeeeiiiiooooouuuunc------\";\n\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n  }\n\n  str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n  .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n  .replace(/-+/g, '-'); // collapse dashes\n\n  str = str.replace(/^([0-9])/, '_$1');\n  return str;\n}\nexport function unique_ID(size, prefix) {\n  var getRandomNumber = function (range) {\n    return Math.floor(Math.random() * range);\n  };\n\n  var getRandomChar = function () {\n    var chars = \"abcdefghijklmnopqurstuvwxyz\";\n    return chars.substr(getRandomNumber(32), 1);\n  };\n\n  var randomID = function (size) {\n    var str = \"\";\n\n    for (var i = 0; i < size; i++) {\n      str += getRandomChar();\n    }\n\n    return str;\n  };\n\n  if (prefix) {\n    return prefix + \"-\" + randomID(size);\n  } else {\n    return \"tl-\" + randomID(size);\n  }\n}\nexport function findNextGreater(list, current, default_value) {\n  // given a sorted list and a current value which *might* be in the list,\n  // return the next greatest value if the current value is >= the last item in the list, return default,\n  // or if default is undefined, return input value\n  for (var i = 0; i < list.length; i++) {\n    if (current < list[i]) {\n      return list[i];\n    }\n  }\n\n  return default_value ? default_value : current;\n}\nexport function findNextLesser(list, current, default_value) {\n  // given a sorted list and a current value which *might* be in the list,\n  // return the next lesser value if the current value is <= the last item in the list, return default,\n  // or if default is undefined, return input value\n  for (var i = list.length - 1; i >= 0; i--) {\n    if (current > list[i]) {\n      return list[i];\n    }\n  }\n\n  return default_value ? default_value : current;\n}\nexport function isEven(n) {\n  return n == parseFloat(n) ? !(n % 2) : void 0;\n}\nexport function findArrayNumberByUniqueID(id, array, prop, defaultVal) {\n  var _n = defaultVal || 0;\n\n  for (var i = 0; i < array.length; i++) {\n    if (array[i].data[prop] == id) {\n      _n = i;\n    }\n  }\n\n  ;\n  return _n;\n}\nexport function unlinkify(text) {\n  if (!text) return text;\n  text = text.replace(/<a\\b[^>]*>/i, \"\");\n  text = text.replace(/<\\/a>/i, \"\");\n  return text;\n}\nexport function setData(obj, data) {\n  obj.data = extend({}, obj.data, data);\n\n  if (obj.data.unique_id === \"\") {\n    obj.data.unique_id = unique_ID(6);\n  }\n}\nexport function htmlify(str) {\n  //if (str.match(/<\\s*p[^>]*>([^<]*)<\\s*\\/\\s*p\\s*>/)) {\n  if (str.match(/<p>[\\s\\S]*?<\\/p>/)) {\n    return str;\n  } else {\n    return \"<p>\" + str + \"</p>\";\n  }\n}\nexport function unhtmlify(str) {\n  str = str.replace(/(<[^>]*>)+/g, '');\n  return str.replace('\"', \"'\");\n}\n/*\t* Turns plain text links into real links\n================================================== */\n\nexport function linkify(text, targets, is_touch) {\n  var make_link = function (url, link_text, prefix) {\n    if (!prefix) {\n      prefix = \"\";\n    }\n\n    var MAX_LINK_TEXT_LENGTH = 30;\n\n    if (link_text && link_text.length > MAX_LINK_TEXT_LENGTH) {\n      link_text = link_text.substring(0, MAX_LINK_TEXT_LENGTH) + \"\\u2026\"; // unicode ellipsis\n    }\n\n    return prefix + \"<a class='tl-makelink' href='\" + url + \"' onclick='void(0)'>\" + link_text + \"</a>\";\n  }; // http://, https://, ftp://\n\n\n  var urlPattern = /\\b(?:https?|ftp):\\/\\/([a-z0-9-+&@#\\/%?=~_|!:,.;]*[a-z0-9-+&@#\\/%=~_|])/gim; // www. sans http:// or https://\n\n  var pseudoUrlPattern = /(^|[^\\/>])(www\\.[\\S]+(\\b|$))/gim; // Email addresses\n\n  var emailAddressPattern = /([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+)/gim;\n  return text.replace(urlPattern, function (match, url_sans_protocol, offset, string) {\n    // Javascript doesn't support negative lookbehind assertions, so\n    // we need to handle risk of matching URLs in legit hrefs\n    if (offset > 0) {\n      var prechar = string[offset - 1];\n\n      if (prechar == '\"' || prechar == \"'\" || prechar == \"=\") {\n        return match;\n      }\n    }\n\n    return make_link(match, url_sans_protocol);\n  }).replace(pseudoUrlPattern, function (match, beforePseudo, pseudoUrl, offset, string) {\n    return make_link('http://' + pseudoUrl, pseudoUrl, beforePseudo);\n  }).replace(emailAddressPattern, function (match, email, offset, string) {\n    return make_link('mailto:' + email, email);\n  });\n}\n/**\n * Try to make seamless the process of interpreting a URL to a web page which embeds an image for sharing purposes\n * as a direct image link. Some services have predictable transformations we can use rather than explain to people\n * this subtlety.\n */\n\nexport function transformImageURL(url) {\n  return url.replace(/(.*)www.dropbox.com\\/(.*)/, '$1dl.dropboxusercontent.com/$2');\n}\nexport const ratio = {\n  square: size => {\n    var s = {\n      w: 0,\n      h: 0\n    };\n\n    if (size.w > size.h && size.h > 0) {\n      s.h = size.h;\n      s.w = size.h;\n    } else {\n      s.w = size.w;\n      s.h = size.w;\n    }\n\n    return s;\n  },\n  r16_9: size => {\n    if (size.w !== null && size.w !== \"\") {\n      return Math.round(size.w / 16 * 9);\n    } else if (size.h !== null && size.h !== \"\") {\n      return Math.round(size.h / 9 * 16);\n    } else {\n      return 0;\n    }\n  },\n  r4_3: size => {\n    if (size.w !== null && size.w !== \"\") {\n      return Math.round(size.w / 4 * 3);\n    } else if (size.h !== null && size.h !== \"\") {\n      return Math.round(size.h / 3 * 4);\n    }\n  }\n};\nexport function getUrlVars(string) {\n  var str,\n      vars = [],\n      hash,\n      hashes;\n  str = string.toString();\n\n  if (str.match('&#038;')) {\n    str = str.replace(\"&#038;\", \"&\");\n  } else if (str.match('&#38;')) {\n    str = str.replace(\"&#38;\", \"&\");\n  } else if (str.match('&amp;')) {\n    str = str.replace(\"&amp;\", \"&\");\n  }\n\n  hashes = str.slice(str.indexOf('?') + 1).split('&');\n\n  for (var i = 0; i < hashes.length; i++) {\n    hash = hashes[i].split('=');\n    vars.push(hash[0]);\n    vars[hash[0]] = hash[1];\n  }\n\n  return vars;\n}\nexport function getParamString(obj) {\n  var params = [];\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      params.push(i + '=' + obj[i]);\n    }\n  }\n\n  return '?' + params.join('&');\n}\nexport function getObjectAttributeByIndex(obj, index) {\n  if (typeof obj != 'undefined') {\n    var i = 0;\n\n    for (var attr in obj) {\n      if (index === i) {\n        return obj[attr];\n      }\n\n      i++;\n    }\n\n    return \"\";\n  } else {\n    return \"\";\n  }\n}\n\nlet base58 = function (alpha) {\n  var alphabet = alpha || '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ',\n      base = alphabet.length;\n  return {\n    encode: function (enc) {\n      if (typeof enc !== 'number' || enc !== parseInt(enc)) throw '\"encode\" only accepts integers.';\n      var encoded = '';\n\n      while (enc) {\n        var remainder = enc % base;\n        enc = Math.floor(enc / base);\n        encoded = alphabet[remainder].toString() + encoded;\n      }\n\n      return encoded;\n    },\n    decode: function (dec) {\n      if (typeof dec !== 'string') throw '\"decode\" only accepts strings.';\n      var decoded = 0;\n\n      while (dec) {\n        var alphabetPosition = alphabet.indexOf(dec[0]);\n        if (alphabetPosition < 0) throw '\"decode\" can\\'t find \"' + dec[0] + '\" in the alphabet: \"' + alphabet + '\"';\n        var powerOf = dec.length - 1;\n        decoded += alphabetPosition * Math.pow(base, powerOf);\n        dec = dec.substring(1);\n      }\n\n      return decoded;\n    }\n  };\n}();\n\nexport { base58 };\nexport function parseYouTubeTime(s) {\n  // given a YouTube start time string in a reasonable format, reduce it to a number of seconds as an integer.\n  if (typeof s == 'string') {\n    let parts = s.match(/^\\s*(\\d+h)?(\\d+m)?(\\d+s)?\\s*/i);\n\n    if (parts) {\n      var hours = parseInt(parts[1]) || 0;\n      var minutes = parseInt(parts[2]) || 0;\n      var seconds = parseInt(parts[3]) || 0;\n      return seconds + minutes * 60 + hours * 60 * 60;\n    }\n  } else if (typeof s == 'number') {\n    return s;\n  }\n\n  return 0;\n}\nexport function stripMarkup(txt) {\n  var doc = new DOMParser().parseFromString(txt, 'text/html');\n  return doc.body.textContent || \"\";\n}","map":{"version":3,"sources":["/Users/nanyang/AY20S2/CS9080/LookingGlass/lookingglass/src/core/Util.js"],"names":["TLError","css_named_colors","intToHexString","i","pad","parseInt","toString","hexToRgb","hex","toLowerCase","shorthandRegex","replace","m","r","g","b","result","exec","rgbToHex","rgb","match","parts","isNaN","mergeData","data_main","data_to_merge","x","Object","prototype","hasOwnProperty","call","isTrue","s","String","Number","extend","dest","sources","Array","slice","arguments","j","len","length","src","TRACE_HANDLERS","addTraceHandler","cb","push","trace","msg","forEach","e","console","log","val","stamp","lastId","key","obj","trim","str","maxDepth","ary","stack","max_depth","top","bottom_idx","classMixin","cls","_cl","getOwnPropertyNames","ensureUniqueKey","candidate","unique_ID","root","similar_ids","counter","indexOf","isEmptyObject","o","properties","keys","p","k","slugify","from","to","l","RegExp","charAt","size","prefix","getRandomNumber","range","Math","floor","random","getRandomChar","chars","substr","randomID","findNextGreater","list","current","default_value","findNextLesser","isEven","n","parseFloat","findArrayNumberByUniqueID","id","array","prop","defaultVal","_n","data","unlinkify","text","setData","unique_id","htmlify","unhtmlify","linkify","targets","is_touch","make_link","url","link_text","MAX_LINK_TEXT_LENGTH","substring","urlPattern","pseudoUrlPattern","emailAddressPattern","url_sans_protocol","offset","string","prechar","beforePseudo","pseudoUrl","email","transformImageURL","ratio","square","w","h","r16_9","round","r4_3","getUrlVars","vars","hash","hashes","split","getParamString","params","join","getObjectAttributeByIndex","index","attr","base58","alpha","alphabet","base","encode","enc","encoded","remainder","decode","dec","decoded","alphabetPosition","powerOf","pow","parseYouTubeTime","hours","minutes","seconds","stripMarkup","txt","doc","DOMParser","parseFromString","body","textContent"],"mappings":"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","sourcesContent":["import TLError from \"../core/TLError\"\n\nconst css_named_colors = {\n    \"aliceblue\": \"#f0f8ff\",\n    \"antiquewhite\": \"#faebd7\",\n    \"aqua\": \"#00ffff\",\n    \"aquamarine\": \"#7fffd4\",\n    \"azure\": \"#f0ffff\",\n    \"beige\": \"#f5f5dc\",\n    \"bisque\": \"#ffe4c4\",\n    \"black\": \"#000000\",\n    \"blanchedalmond\": \"#ffebcd\",\n    \"blue\": \"#0000ff\",\n    \"blueviolet\": \"#8a2be2\",\n    \"brown\": \"#a52a2a\",\n    \"burlywood\": \"#deb887\",\n    \"cadetblue\": \"#5f9ea0\",\n    \"chartreuse\": \"#7fff00\",\n    \"chocolate\": \"#d2691e\",\n    \"coral\": \"#ff7f50\",\n    \"cornflowerblue\": \"#6495ed\",\n    \"cornsilk\": \"#fff8dc\",\n    \"crimson\": \"#dc143c\",\n    \"cyan\": \"#00ffff\",\n    \"darkblue\": \"#00008b\",\n    \"darkcyan\": \"#008b8b\",\n    \"darkgoldenrod\": \"#b8860b\",\n    \"darkgray\": \"#a9a9a9\",\n    \"darkgreen\": \"#006400\",\n    \"darkkhaki\": \"#bdb76b\",\n    \"darkmagenta\": \"#8b008b\",\n    \"darkolivegreen\": \"#556b2f\",\n    \"darkorange\": \"#ff8c00\",\n    \"darkorchid\": \"#9932cc\",\n    \"darkred\": \"#8b0000\",\n    \"darksalmon\": \"#e9967a\",\n    \"darkseagreen\": \"#8fbc8f\",\n    \"darkslateblue\": \"#483d8b\",\n    \"darkslategray\": \"#2f4f4f\",\n    \"darkturquoise\": \"#00ced1\",\n    \"darkviolet\": \"#9400d3\",\n    \"deeppink\": \"#ff1493\",\n    \"deepskyblue\": \"#00bfff\",\n    \"dimgray\": \"#696969\",\n    \"dodgerblue\": \"#1e90ff\",\n    \"firebrick\": \"#b22222\",\n    \"floralwhite\": \"#fffaf0\",\n    \"forestgreen\": \"#228b22\",\n    \"fuchsia\": \"#ff00ff\",\n    \"gainsboro\": \"#dcdcdc\",\n    \"ghostwhite\": \"#f8f8ff\",\n    \"gold\": \"#ffd700\",\n    \"goldenrod\": \"#daa520\",\n    \"gray\": \"#808080\",\n    \"green\": \"#008000\",\n    \"greenyellow\": \"#adff2f\",\n    \"honeydew\": \"#f0fff0\",\n    \"hotpink\": \"#ff69b4\",\n    \"indianred\": \"#cd5c5c\",\n    \"indigo\": \"#4b0082\",\n    \"ivory\": \"#fffff0\",\n    \"khaki\": \"#f0e68c\",\n    \"lavender\": \"#e6e6fa\",\n    \"lavenderblush\": \"#fff0f5\",\n    \"lawngreen\": \"#7cfc00\",\n    \"lemonchiffon\": \"#fffacd\",\n    \"lightblue\": \"#add8e6\",\n    \"lightcoral\": \"#f08080\",\n    \"lightcyan\": \"#e0ffff\",\n    \"lightgoldenrodyellow\": \"#fafad2\",\n    \"lightgray\": \"#d3d3d3\",\n    \"lightgreen\": \"#90ee90\",\n    \"lightpink\": \"#ffb6c1\",\n    \"lightsalmon\": \"#ffa07a\",\n    \"lightseagreen\": \"#20b2aa\",\n    \"lightskyblue\": \"#87cefa\",\n    \"lightslategray\": \"#778899\",\n    \"lightsteelblue\": \"#b0c4de\",\n    \"lightyellow\": \"#ffffe0\",\n    \"lime\": \"#00ff00\",\n    \"limegreen\": \"#32cd32\",\n    \"linen\": \"#faf0e6\",\n    \"magenta\": \"#ff00ff\",\n    \"maroon\": \"#800000\",\n    \"mediumaquamarine\": \"#66cdaa\",\n    \"mediumblue\": \"#0000cd\",\n    \"mediumorchid\": \"#ba55d3\",\n    \"mediumpurple\": \"#9370db\",\n    \"mediumseagreen\": \"#3cb371\",\n    \"mediumslateblue\": \"#7b68ee\",\n    \"mediumspringgreen\": \"#00fa9a\",\n    \"mediumturquoise\": \"#48d1cc\",\n    \"mediumvioletred\": \"#c71585\",\n    \"midnightblue\": \"#191970\",\n    \"mintcream\": \"#f5fffa\",\n    \"mistyrose\": \"#ffe4e1\",\n    \"moccasin\": \"#ffe4b5\",\n    \"navajowhite\": \"#ffdead\",\n    \"navy\": \"#000080\",\n    \"oldlace\": \"#fdf5e6\",\n    \"olive\": \"#808000\",\n    \"olivedrab\": \"#6b8e23\",\n    \"orange\": \"#ffa500\",\n    \"orangered\": \"#ff4500\",\n    \"orchid\": \"#da70d6\",\n    \"palegoldenrod\": \"#eee8aa\",\n    \"palegreen\": \"#98fb98\",\n    \"paleturquoise\": \"#afeeee\",\n    \"palevioletred\": \"#db7093\",\n    \"papayawhip\": \"#ffefd5\",\n    \"peachpuff\": \"#ffdab9\",\n    \"peru\": \"#cd853f\",\n    \"pink\": \"#ffc0cb\",\n    \"plum\": \"#dda0dd\",\n    \"powderblue\": \"#b0e0e6\",\n    \"purple\": \"#800080\",\n    \"rebeccapurple\": \"#663399\",\n    \"red\": \"#ff0000\",\n    \"rosybrown\": \"#bc8f8f\",\n    \"royalblue\": \"#4169e1\",\n    \"saddlebrown\": \"#8b4513\",\n    \"salmon\": \"#fa8072\",\n    \"sandybrown\": \"#f4a460\",\n    \"seagreen\": \"#2e8b57\",\n    \"seashell\": \"#fff5ee\",\n    \"sienna\": \"#a0522d\",\n    \"silver\": \"#c0c0c0\",\n    \"skyblue\": \"#87ceeb\",\n    \"slateblue\": \"#6a5acd\",\n    \"slategray\": \"#708090\",\n    \"snow\": \"#fffafa\",\n    \"springgreen\": \"#00ff7f\",\n    \"steelblue\": \"#4682b4\",\n    \"tan\": \"#d2b48c\",\n    \"teal\": \"#008080\",\n    \"thistle\": \"#d8bfd8\",\n    \"tomato\": \"#ff6347\",\n    \"turquoise\": \"#40e0d0\",\n    \"violet\": \"#ee82ee\",\n    \"wheat\": \"#f5deb3\",\n    \"white\": \"#ffffff\",\n    \"whitesmoke\": \"#f5f5f5\",\n    \"yellow\": \"#ffff00\",\n    \"yellowgreen\": \"#9acd32\"\n}\n\nfunction intToHexString(i) {\n    return pad(parseInt(i, 10).toString(16));\n}\n\nexport function hexToRgb(hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    if (css_named_colors[hex.toLowerCase()]) {\n        hex = css_named_colors[hex.toLowerCase()];\n    }\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n        return r + r + g + g + b + b;\n    });\n\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n// given an object with r, g, and b keys, or a string of the form 'rgb(mm,nn,ll)', return a CSS hex string including the leading '#' character\nexport function rgbToHex(rgb) {\n    var r, g, b;\n    if (typeof(rgb) == 'object') {\n        r = rgb.r;\n        g = rgb.g;\n        b = rgb.b;\n    } else if (typeof(rgb.match) == 'function') {\n        var parts = rgb.match(/^rgb\\((\\d+),(\\d+),(\\d+)\\)$/);\n        if (parts) {\n            r = parts[1];\n            g = parts[2];\n            b = parts[3];\n        }\n    }\n    if (isNaN(r) || isNaN(b) || isNaN(g)) {\n        throw new TLError(\"invalid_rgb_err\");\n    }\n    return \"#\" + intToHexString(r) + intToHexString(g) + intToHexString(b);\n}\n\nexport function mergeData(data_main, data_to_merge) {\n    var x;\n    for (x in data_to_merge) {\n        if (Object.prototype.hasOwnProperty.call(data_to_merge, x)) {\n            data_main[x] = data_to_merge[x];\n        }\n    }\n    return data_main;\n}\n\nexport function isTrue(s) {\n    if (s == null) return false;\n    return s == true || String(s).toLowerCase() == 'true' || Number(s) == 1;\n}\n\n// like mergeData but takes an arbitrarily long list of sources to merge.\nexport function extend( /*Object*/ dest) /*-> Object*/ { // merge src properties into dest\n    var sources = Array.prototype.slice.call(arguments, 1);\n    for (var j = 0, len = sources.length, src; j < len; j++) {\n        src = sources[j] || {};\n        mergeData(dest, src);\n    }\n    return dest;\n}\n\nconst TRACE_HANDLERS = []\n\n/**\n * Register a callback to be executed when trace is called in this runtime.\n * Callbacks will be called with whatever was passed to `trace` which is \n * expected to be a string.\n * @param {callable} cb \n */\nexport function addTraceHandler(cb) {\n    TRACE_HANDLERS.push(cb)\n}\n\n\n/**\n * Pass the given `msg` to each registered trace handler.\n * This is a crude adaptation of the original Timeline trace\n * function which assumed access to a global `debug` flag.\n * \n * @param {string} msg \n */\nexport function trace(msg) {\n    TRACE_HANDLERS.forEach((cb) => {\n        try {\n            cb(msg)\n        } catch (e) {\n            if (console && console.log) {\n                console.log(\"Error handling trace\", e)\n            }\n        }\n    })\n}\n\n\nexport function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) val = \"0\" + val;\n    return val;\n}\n\nexport const stamp = (function() {\n    var lastId = 0,\n        key = '_tl_id';\n\n    return function( /*Object*/ obj) {\n        obj[key] = obj[key] || ++lastId;\n        return obj[key];\n    };\n}())\n\n/**\n * Remove any leading or trailing whitespace from the given string.\n * If `str` is undefined or does not have a `replace` function, return\n * an empty string.\n */\nexport function trim(str) {\n    if (str && typeof(str.replace) == 'function') {\n        return str.replace(/^\\s+|\\s+$/g, '');\n    }\n    return \"\";\n}\n\nexport function maxDepth(ary) {\n    // given a sorted array of 2-tuples of numbers, count how many \"deep\" the items are.\n    // that is, what is the maximum number of tuples that occupy any one moment\n    // each tuple should also be sorted\n    var stack = [];\n    var max_depth = 0;\n    for (var i = 0; i < ary.length; i++) {\n\n        stack.push(ary[i]);\n        if (stack.length > 1) {\n            var top = stack[stack.length - 1]\n            var bottom_idx = -1;\n            for (var j = 0; j < stack.length - 1; j++) {\n                if (stack[j][1] < top[0]) {\n                    bottom_idx = j;\n                }\n            };\n            if (bottom_idx >= 0) {\n                stack = stack.slice(bottom_idx + 1);\n            }\n\n        }\n\n        if (stack.length > max_depth) {\n            max_depth = stack.length;\n        }\n    };\n    return max_depth;\n}\n\n/**\n * Implement mixin behavior. Based on \n *     https://blog.bitsrc.io/understanding-mixins-in-javascript-de5d3e02b466\n * @param {class} cls \n * @param  {...class} src \n */\nexport function classMixin(cls, ...src) {\n    for (let _cl of src) {\n        for (var key of Object.getOwnPropertyNames(_cl.prototype)) {\n            cls.prototype[key] = _cl.prototype[key]\n        }\n    }\n}\n\nexport function ensureUniqueKey(obj, candidate) {\n    if (!candidate) { candidate = unique_ID(6); }\n\n    if (!(candidate in obj)) { return candidate; }\n\n    var root = candidate.match(/^(.+)(-\\d+)?$/)[1];\n    var similar_ids = [];\n    // get an alternative\n    for (let key in obj) {\n        if (key.match(/^(.+?)(-\\d+)?$/)[1] == root) {\n            similar_ids.push(key);\n        }\n    }\n    candidate = root + \"-\" + (similar_ids.length + 1);\n\n    for (var counter = similar_ids.length; similar_ids.indexOf(candidate) != -1; counter++) {\n        candidate = root + '-' + counter;\n    }\n\n    return candidate;\n}\n\nexport function isEmptyObject(o) {\n    var properties = []\n    if (Object.keys) {\n        properties = Object.keys(o);\n    } else { // all this to support IE 8\n        for (var p in o)\n            if (Object.prototype.hasOwnProperty.call(o, p)) properties.push(p);\n    }\n    for (var i = 0; i < properties.length; i++) {\n        var k = properties[i];\n        if (o[k] != null && typeof o[k] != \"string\") return false;\n        if (trim(o[k]).length != 0) return false;\n    }\n    return true;\n}\n\nexport function slugify(str) {\n    // borrowed from http://stackoverflow.com/a/5782563/102476\n    str = trim(str);\n    str = str.toLowerCase();\n\n    // remove accents, swap ñ for n, etc\n    var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n    var to = \"aaaaaeeeeeiiiiooooouuuunc------\";\n    for (var i = 0, l = from.length; i < l; i++) {\n        str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n    }\n\n    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n        .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n        .replace(/-+/g, '-'); // collapse dashes\n\n    str = str.replace(/^([0-9])/, '_$1');\n    return str;\n}\n\nexport function unique_ID(size, prefix) {\n\n    var getRandomNumber = function(range) {\n        return Math.floor(Math.random() * range);\n    };\n\n    var getRandomChar = function() {\n        var chars = \"abcdefghijklmnopqurstuvwxyz\";\n        return chars.substr(getRandomNumber(32), 1);\n    };\n\n    var randomID = function(size) {\n        var str = \"\";\n        for (var i = 0; i < size; i++) {\n            str += getRandomChar();\n        }\n        return str;\n    };\n\n    if (prefix) {\n        return prefix + \"-\" + randomID(size);\n    } else {\n        return \"tl-\" + randomID(size);\n    }\n}\n\nexport function findNextGreater(list, current, default_value) {\n    // given a sorted list and a current value which *might* be in the list,\n    // return the next greatest value if the current value is >= the last item in the list, return default,\n    // or if default is undefined, return input value\n    for (var i = 0; i < list.length; i++) {\n        if (current < list[i]) {\n            return list[i];\n        }\n    }\n\n    return (default_value) ? default_value : current;\n}\n\nexport function findNextLesser(list, current, default_value) {\n    // given a sorted list and a current value which *might* be in the list,\n    // return the next lesser value if the current value is <= the last item in the list, return default,\n    // or if default is undefined, return input value\n    for (var i = list.length - 1; i >= 0; i--) {\n        if (current > list[i]) {\n            return list[i];\n        }\n    }\n\n    return (default_value) ? default_value : current;\n}\n\nexport function isEven(n) {\n    return n == parseFloat(n) ? !(n % 2) : void 0;\n}\n\nexport function findArrayNumberByUniqueID(id, array, prop, defaultVal) {\n    var _n = defaultVal || 0;\n\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].data[prop] == id) {\n            _n = i;\n        }\n    };\n\n    return _n;\n}\n\nexport function unlinkify(text) {\n    if (!text) return text;\n    text = text.replace(/<a\\b[^>]*>/i, \"\");\n    text = text.replace(/<\\/a>/i, \"\");\n    return text;\n}\n\nexport function setData(obj, data) {\n    obj.data = extend({}, obj.data, data);\n    if (obj.data.unique_id === \"\") {\n        obj.data.unique_id = unique_ID(6);\n    }\n}\n\nexport function htmlify(str) {\n    //if (str.match(/<\\s*p[^>]*>([^<]*)<\\s*\\/\\s*p\\s*>/)) {\n    if (str.match(/<p>[\\s\\S]*?<\\/p>/)) {\n\n        return str;\n    } else {\n        return \"<p>\" + str + \"</p>\";\n    }\n}\n\nexport function unhtmlify(str) {\n    str = str.replace(/(<[^>]*>)+/g, '');\n    return str.replace('\"', \"'\");\n}\n\n/*\t* Turns plain text links into real links\n================================================== */\nexport function linkify(text, targets, is_touch) {\n\n    var make_link = function(url, link_text, prefix) {\n            if (!prefix) {\n                prefix = \"\";\n            }\n            var MAX_LINK_TEXT_LENGTH = 30;\n            if (link_text && link_text.length > MAX_LINK_TEXT_LENGTH) {\n                link_text = link_text.substring(0, MAX_LINK_TEXT_LENGTH) + \"\\u2026\"; // unicode ellipsis\n            }\n            return prefix + \"<a class='tl-makelink' href='\" + url + \"' onclick='void(0)'>\" + link_text + \"</a>\";\n        }\n        // http://, https://, ftp://\n    var urlPattern = /\\b(?:https?|ftp):\\/\\/([a-z0-9-+&@#\\/%?=~_|!:,.;]*[a-z0-9-+&@#\\/%=~_|])/gim;\n\n    // www. sans http:// or https://\n    var pseudoUrlPattern = /(^|[^\\/>])(www\\.[\\S]+(\\b|$))/gim;\n\n    // Email addresses\n    var emailAddressPattern = /([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+)/gim;\n\n\n    return text\n        .replace(urlPattern, function(match, url_sans_protocol, offset, string) {\n            // Javascript doesn't support negative lookbehind assertions, so\n            // we need to handle risk of matching URLs in legit hrefs\n            if (offset > 0) {\n                var prechar = string[offset - 1];\n                if (prechar == '\"' || prechar == \"'\" || prechar == \"=\") {\n                    return match;\n                }\n            }\n            return make_link(match, url_sans_protocol);\n        })\n        .replace(pseudoUrlPattern, function(match, beforePseudo, pseudoUrl, offset, string) {\n            return make_link('http://' + pseudoUrl, pseudoUrl, beforePseudo);\n        })\n        .replace(emailAddressPattern, function(match, email, offset, string) {\n            return make_link('mailto:' + email, email);\n        });\n}\n\n/**\n * Try to make seamless the process of interpreting a URL to a web page which embeds an image for sharing purposes\n * as a direct image link. Some services have predictable transformations we can use rather than explain to people\n * this subtlety.\n */\nexport function transformImageURL(url) {\n    return url.replace(/(.*)www.dropbox.com\\/(.*)/, '$1dl.dropboxusercontent.com/$2')\n}\n\nexport const ratio = {\n    square: (size) => {\n        var s = {\n            w: 0,\n            h: 0\n        }\n        if (size.w > size.h && size.h > 0) {\n            s.h = size.h;\n            s.w = size.h;\n        } else {\n            s.w = size.w;\n            s.h = size.w;\n        }\n        return s;\n    },\n    r16_9: (size) => {\n        if (size.w !== null && size.w !== \"\") {\n            return Math.round((size.w / 16) * 9);\n        } else if (size.h !== null && size.h !== \"\") {\n            return Math.round((size.h / 9) * 16);\n        } else {\n            return 0;\n        }\n    },\n    r4_3: (size) => {\n        if (size.w !== null && size.w !== \"\") {\n            return Math.round((size.w / 4) * 3);\n        } else if (size.h !== null && size.h !== \"\") {\n            return Math.round((size.h / 3) * 4);\n        }\n    }\n}\n\nexport function getUrlVars(string) {\n    var str,\n        vars = [],\n        hash,\n        hashes;\n\n    str = string.toString();\n\n    if (str.match('&#038;')) {\n        str = str.replace(\"&#038;\", \"&\");\n    } else if (str.match('&#38;')) {\n        str = str.replace(\"&#38;\", \"&\");\n    } else if (str.match('&amp;')) {\n        str = str.replace(\"&amp;\", \"&\");\n    }\n\n    hashes = str.slice(str.indexOf('?') + 1).split('&');\n\n    for (var i = 0; i < hashes.length; i++) {\n        hash = hashes[i].split('=');\n        vars.push(hash[0]);\n        vars[hash[0]] = hash[1];\n    }\n\n\n    return vars;\n}\n\nexport function getParamString(obj) {\n    var params = [];\n    for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            params.push(i + '=' + obj[i]);\n        }\n    }\n    return '?' + params.join('&');\n}\n\nexport function getObjectAttributeByIndex(obj, index) {\n    if (typeof obj != 'undefined') {\n        var i = 0;\n        for (var attr in obj) {\n            if (index === i) {\n                return obj[attr];\n            }\n            i++;\n        }\n        return \"\";\n    } else {\n        return \"\";\n    }\n\n}\n\nlet base58 = (function(alpha) {\n    var alphabet = alpha || '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ',\n        base = alphabet.length;\n    return {\n        encode: function(enc) {\n            if (typeof enc !== 'number' || enc !== parseInt(enc))\n                throw '\"encode\" only accepts integers.';\n            var encoded = '';\n            while (enc) {\n                var remainder = enc % base;\n                enc = Math.floor(enc / base);\n                encoded = alphabet[remainder].toString() + encoded;\n            }\n            return encoded;\n        },\n        decode: function(dec) {\n            if (typeof dec !== 'string')\n                throw '\"decode\" only accepts strings.';\n            var decoded = 0;\n            while (dec) {\n                var alphabetPosition = alphabet.indexOf(dec[0]);\n                if (alphabetPosition < 0)\n                    throw '\"decode\" can\\'t find \"' + dec[0] + '\" in the alphabet: \"' + alphabet + '\"';\n                var powerOf = dec.length - 1;\n                decoded += alphabetPosition * (Math.pow(base, powerOf));\n                dec = dec.substring(1);\n            }\n            return decoded;\n        }\n    };\n})()\n\nexport { base58 }\n\n\nexport function parseYouTubeTime(s) {\n    // given a YouTube start time string in a reasonable format, reduce it to a number of seconds as an integer.\n    if (typeof(s) == 'string') {\n        let parts = s.match(/^\\s*(\\d+h)?(\\d+m)?(\\d+s)?\\s*/i);\n        if (parts) {\n            var hours = parseInt(parts[1]) || 0;\n            var minutes = parseInt(parts[2]) || 0;\n            var seconds = parseInt(parts[3]) || 0;\n            return seconds + (minutes * 60) + (hours * 60 * 60);\n        }\n    } else if (typeof(s) == 'number') {\n        return s;\n    }\n    return 0;\n}\n\nexport function stripMarkup(txt) {\n    var doc = new DOMParser().parseFromString(txt, 'text/html');\n    return doc.body.textContent || \"\";\n}"]},"metadata":{},"sourceType":"module"}