{"ast":null,"code":"import _slicedToArray from\"/Users/nanyang/AY20S2/CS9080/LookingGlass/lookingglass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import react,{useEffect,useState}from'react';import Button from'react-bootstrap/Button';import Image from'react-bootstrap/Image';import{Container,Grid,Col,Row}from'react-bootstrap';import{readGoogleAsCSV}from'../core/Config';import\"../css/topic.css\";import{BrowserRouter as Router,Switch,Route,Link,useRouteMatch,useParams,useLocation}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Topic(props){var _useParams=useParams(),topicId=_useParams.topicId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),topic_list=_useState2[0],set_topic_list=_useState2[1];useEffect(function(){readGoogleAsCSV(topicId,'').then(function(data){return set_topic_list(data);}// console.log(\"this is a bullshit\"),\n// console.log(topic_list.topics[0]),\n);},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{position:\"relative\"},children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Image,{src:props.data.img_src,style:{width:\"150%\",height:\"auto\"}}),/*#__PURE__*/_jsx(\"div\",{className:\"topic_left_top_tag\",children:\"SPOTLIGHT\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"topic_text_container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"topic_headline\",children:props.data.headline}),/*#__PURE__*/_jsx(\"div\",{className:\"topic_summary\",children:props.data.summary})]})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"author_row\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Image,{src:props.data.author_icon,roundedCircle:true,style:{width:\"20%\"}})}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(\"div\",{children:props.data.author_name}),/*#__PURE__*/_jsx(\"div\",{children:props.data.author_bio})]})]})})})]});}","map":{"version":3,"sources":["/Users/nanyang/AY20S2/CS9080/LookingGlass/lookingglass/src/pages/topics.js"],"names":["react","useEffect","useState","Button","Image","Container","Grid","Col","Row","readGoogleAsCSV","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","useParams","useLocation","Topic","props","topicId","topic_list","set_topic_list","then","data","position","img_src","width","height","headline","summary","author_icon","author_name","author_bio"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,CAAwBC,QAAxB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,GAA1B,CAA+BC,GAA/B,KAA0C,iBAA1C,CACA,OAAQC,eAAR,KAA8B,gBAA9B,CACA,MAAO,kBAAP,CACA,OACIC,aAAa,GAAIC,CAAAA,MADrB,CAEIC,MAFJ,CAGIC,KAHJ,CAIIC,IAJJ,CAKIC,aALJ,CAMIC,SANJ,CAOIC,WAPJ,KAQS,kBART,C,wFAUA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,gBACfH,SAAS,EADM,CAC3BI,OAD2B,YAC3BA,OAD2B,eAGGlB,QAAQ,CAAC,EAAD,CAHX,wCAG1BmB,UAH0B,eAGfC,cAHe,eAIjCrB,SAAS,CAAC,UAAM,CACZQ,eAAe,CAACW,OAAD,CAAU,EAAV,CAAf,CACCG,IADD,CAEA,SAAAC,IAAI,QAAIF,CAAAA,cAAc,CAACE,IAAD,CAAlB,EACJ;AACA;AAJA,EAMH,CAPQ,CAON,EAPM,CAAT,CAWA,mBACI,oCAEI,YAAK,KAAK,CAAE,CAAEC,QAAQ,CAAE,UAAZ,CAAZ,uBACI,MAAC,GAAD,yBACI,KAAC,KAAD,EAAO,GAAG,CAAEN,KAAK,CAACK,IAAN,CAAWE,OAAvB,CAAgC,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,MAAzB,CAAvC,EADJ,cAEI,YAAK,SAAS,CAAC,oBAAf,uBAFJ,cAGI,aAAK,SAAS,CAAC,sBAAf,wBACI,YAAK,SAAS,CAAC,gBAAf,UAAiCT,KAAK,CAACK,IAAN,CAAWK,QAA5C,EADJ,cAEI,YAAK,SAAS,CAAC,eAAf,UAAgCV,KAAK,CAACK,IAAN,CAAWM,OAA3C,EAFJ,GAHJ,GADJ,EAFJ,cAYI,YAAK,KAAK,CAAC,YAAX,uBACA,KAAC,SAAD,wBACA,MAAC,GAAD,yBACQ,KAAC,GAAD,wBACI,KAAC,KAAD,EAAO,GAAG,CAAEX,KAAK,CAACK,IAAN,CAAWO,WAAvB,CAAoC,aAAa,KAAjD,CAAkD,KAAK,CAAE,CAAEJ,KAAK,CAAC,KAAR,CAAzD,EADJ,EADR,cAIQ,MAAC,GAAD,yBACI,qBAAMR,KAAK,CAACK,IAAN,CAAWQ,WAAjB,EADJ,cAEI,qBAAMb,KAAK,CAACK,IAAN,CAAWS,UAAjB,EAFJ,GAJR,GADA,EADA,EAZJ,GADJ,CA4BH","sourcesContent":["import react,{useEffect,useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport { Container, Grid, Col, Row } from 'react-bootstrap';\nimport {readGoogleAsCSV} from '../core/Config';\nimport \"../css/topic.css\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams,\n    useLocation\n  } from \"react-router-dom\";\n\nexport default function Topic(props) {\n    let { topicId } = useParams();\n\n    const [topic_list,set_topic_list] = useState([]);\n    useEffect(() => {\n        readGoogleAsCSV(topicId, '')\n        .then(\n        data => set_topic_list(data),\n        // console.log(\"this is a bullshit\"),\n        // console.log(topic_list.topics[0]),\n        )\n    }, []);\n\n\n    \n    return (\n        <div>\n            {/* <div style={{ textAlign: \"center\", margin: \"5%\", fontSize: \"1em\" }}>{topic_list.topics[0].topic_keyword}</div> */}\n            <div style={{ position: \"relative\"}}>\n                <Col>\n                    <Image src={props.data.img_src} style={{ width: \"150%\", height: \"auto\"}}/>\n                    <div className=\"topic_left_top_tag\">SPOTLIGHT</div>\n                    <div className=\"topic_text_container\">\n                        <div className=\"topic_headline\">{props.data.headline}</div>\n                        <div className=\"topic_summary\">{props.data.summary}</div>\n                    </div>\n                </Col>\n            </div>\n            <div class=\"author_row\">\n            <Container>\n            <Row >\n                    <Col>\n                        <Image src={props.data.author_icon} roundedCircle style={{ width:\"20%\"  }} />\n                    </Col>\n                    <Col >\n                        <div>{props.data.author_name}</div>\n                        <div>{props.data.author_bio}</div>\n                    </Col>\n            </Row>\n            </Container>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}